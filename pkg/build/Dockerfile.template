#:::
#::: BUILD CONTAINER
#:::

# GO_VERSION is the golang version this image will be built against.
ARG GO_VERSION
# TESTPLAN_EXEC_PKG is the executable package of the testplan to build.
# The image will build that package only.
ARG TESTPLAN_EXEC_PKG

# Dynamically select the golang version.
# TODO: Not sure how this interplays with image caching.
FROM golang:${GO_VERSION}-buster

ENV TESTPLAN_EXEC_PKG ${TESTPLAN_EXEC_PKG}
# PLAN_DIR is the location containing the plan source inside the container.
ENV PLAN_DIR /plan/

# Copy only go.mod files and download deps, in order to leverage Docker caching.
COPY /plan/go.mod ${PLAN_DIR}
# Unfortunately there's no way to specify a ** glob pattern to cover all go.mods
# inside sdk.
COPY /sdk/sync/go.mod /sdk/sync/go.mod
COPY /sdk/runtime/go.mod /sdk/runtime/go.mod
# Download deps.
RUN cd ${PLAN_DIR} \
    && go env -w GOPROXY=direct \
    && go mod download

# Now copy the rest of the source and run the build.
COPY . /
RUN cd ${PLAN_DIR} \
    && go env -w GOPROXY=direct \
    && CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o testplan ${TESTPLAN_EXEC_PKG}

#:::
#::: RUNTIME CONTAINER
#:::

FROM busybox:1.31.0-glibc

COPY --from=0 /plan/testplan /

ENTRYPOINT [ "/testplan" ]
